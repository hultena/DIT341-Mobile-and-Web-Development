{
	"info": {
		"_postman_id": "eaf50eb2-9882-4e5e-b989-2bf7791c5672",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET /api",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "41588586-a47a-478c-8d5f-5fc26bf519aa",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api",
					"host": [
						"{{host}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "add user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "569beac6-8445-4e52-b4e0-f04eac1bd63b",
						"exec": [
							"var jsonData = pm.response.json();",
							"postman.setEnvironmentVariable(\"userId\", jsonData._id);",
							"",
							"pm.test(\"response is CREATED\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"response should have valid JSON data\", function() {",
							"    pm.expect(jsonData.username).to.eql('Alexander');",
							"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
							"    pm.expect(jsonData.password).to.eql('abc123')",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"username": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\":\"Alexander\",\r\n\t\"email\":\"asd@asd.com\",\r\n\t\"password\":\"abc123\"\r\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				},
				"description": "Posting a user."
			},
			"response": []
		},
		{
			"name": "get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c84ad74-884c-4f69-bc06-4f9db260cbed",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrayLength = jsonData.length;",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"last entry in the array should be the posted user\", function() {",
							"    pm.expect(jsonData[arrayLength-1].username).to.eql(\"Alexander\");",
							"    pm.expect(jsonData[arrayLength-1].email).to.eql('asd@asd.com');    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				},
				"description": "Testing to get all users"
			},
			"response": []
		},
		{
			"name": "get specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0b44a458-155e-4bd2-bdd2-33a813f42a4d",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should have valid JSON data\", function() {",
							"    pm.expect(jsonData.username).to.eql('Alexander');",
							"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
							"    pm.expect(jsonData.password).to.eql('abc123');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				},
				"description": "Testing to get specific user."
			},
			"response": []
		},
		{
			"name": "delete all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ab37ca06-aec5-498a-b6cb-07f786a3542d",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate deletion was successful\", function() {",
							"    pm.expect(jsonData.ok).to.eql(1);    ",
							"    pm.expect(jsonData.deletedCount).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				},
				"description": "delete all users"
			},
			"response": []
		},
		{
			"name": "get all users 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "256efe9d-ae9c-4ab0-a60f-f257d8c2e261",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrayLength = jsonData.length;",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"there should be no users\", function() {",
							"    pm.expect(arrayLength).to.eql(0);",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				},
				"description": "Testing to get all users"
			},
			"response": []
		},
		{
			"name": "delete all users 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3aecb922-aca6-4100-8294-855c66d1077d",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate deletion was successful\", function() {",
							"    pm.expect(jsonData.ok).to.eql(1);",
							"    pm.expect(jsonData.deletedCount).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				},
				"description": "delete all users"
			},
			"response": []
		},
		{
			"name": "add user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0026ad9a-c252-47f2-9d14-e625652bed1a",
						"exec": [
							"var jsonData = pm.response.json();",
							"postman.setEnvironmentVariable(\"userId\", jsonData._id);",
							"",
							"pm.test(\"response is CREATED\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"response should have valid JSON data\", function() {",
							"    pm.expect(jsonData.username).to.eql('Alexander');",
							"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
							"    pm.expect(jsonData.password).to.eql('abc123')",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\":\"Alexander\",\r\n\t\"email\":\"asd@asd.com\",\r\n\t\"password\":\"abc123\"\r\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				},
				"description": "Posting a user."
			},
			"response": []
		},
		{
			"name": "get specific user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba084575-23da-49c5-a8c6-1fbb179fcb2e",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should have valid JSON data\", function() {",
							"    pm.expect(jsonData.username).to.eql('Alexander');",
							"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
							"    pm.expect(jsonData.password).to.eql('abc123');",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				},
				"description": "Testing to get specific user."
			},
			"response": []
		},
		{
			"name": "patch user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7f66e0e7-6494-4e22-9d68-afac7d4a1acc",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate correct user was updated\", function() {",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Alexander2\",\n    \"email\": \"asd@asd.com\",\n    \"password\": \"abc123\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				},
				"description": "patching user"
			},
			"response": []
		},
		{
			"name": "patch user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "99f4b500-0ccb-4f49-866e-8f3f5d9bcf4f",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate correct user was updated\", function() {",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Alexander3\",\n    \"email\": \"asd@asd.com\",\n    \"password\": \"abc123\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				},
				"description": "patching user"
			},
			"response": []
		},
		{
			"name": "replace user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a3b0457-b0dd-40d3-9b3a-294ea0dd317f",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate correct user was updated\", function() {",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Alexander4\",\n    \"email\": \"abc@abc.com\",\n    \"password\": \"abc1234\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				},
				"description": "putting user"
			},
			"response": []
		},
		{
			"name": "replace user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a1f6ed4-5396-4afb-aef6-00b67ab8c9cb",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate correct user was updated\", function() {",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Alexander5\",\n    \"email\": \"def@def.com\",\n    \"password\": \"abc12345\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				},
				"description": "putting user"
			},
			"response": []
		},
		{
			"name": "add shoppinglist to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c8d423c-ce78-4ac9-931d-6f937b938045",
						"exec": [
							"var jsonData = pm.response.json();",
							"postman.setEnvironmentVariable(\"shoppingListId\", jsonData._id);",
							"",
							"pm.test(\"response is CREATED\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"response should have valid JSON data\", function() {",
							"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"ingredients\": []\n}"
				},
				"url": {
					"raw": "{{host}}/api/users/{{userId}}/shoppinglists",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}",
						"shoppinglists"
					]
				},
				"description": "posting user shoppinglist"
			},
			"response": []
		},
		{
			"name": "get specific user shoppinglist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af4d0eb3-863c-4c6d-9267-26994bf2b024",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should have valid JSON data\", function() {",
							"    pm.expect(jsonData.user._id).to.eql(pm.environment.get('userId'));",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('shoppingListId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}/shoppinglists/{{shoppingListId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}",
						"shoppinglists",
						"{{shoppingListId}}"
					]
				},
				"description": "getting specific user list"
			},
			"response": []
		},
		{
			"name": "delete specific shoppinglist from user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18019e46-fe36-45ce-9956-18713d9490ac",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response should indicate correct list was deleted\", function() {",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('shoppingListId'));",
							"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
							"});",
							"pm.globals.get(\"variable_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}/shoppinglists/{{shoppingListId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}",
						"shoppinglists",
						"{{shoppingListId}}"
					]
				},
				"description": "Deleting shoppinglist from user"
			},
			"response": []
		},
		{
			"name": "get all shopping lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83ff5e93-c04a-4051-b3dc-f468610a03de",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"response is OK\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function() {\r",
							"    pm.expect(jsonData.length).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}/shoppinglists",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}",
						"shoppinglists"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f618acd5-d859-4a60-9b30-23031205c66f",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"response is OK\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response should indicate correct user was deleted\", function() {\r",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));\r",
							"});\r",
							"pm.globals.get(\"variable_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete specific user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9582631-676b-445d-93dd-6c9e4e97763d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"response is NOT FOUND\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.globals.get(\"variable_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{userId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fb8d1d7b-4c27-41bd-bcaa-7f0c9eeaab6e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "327707bf-2e9e-4e19-baa4-2ab59dcb7c97",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd185905-a834-4211-8030-583d17702534",
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}