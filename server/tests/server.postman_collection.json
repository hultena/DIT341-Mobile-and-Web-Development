{
	"info": {
		"_postman_id": "36f348a9-3f3f-41d1-81d1-471f0a8aed5a",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "GET /api",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fbc3c272-32cf-434b-ba18-f132cbb6dafd",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api",
							"host": [
								"{{host}}"
							],
							"path": [
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "465b0284-f41b-4fca-afa5-ff7dedb69e9f",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"userId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.username).to.eql('Alexander');",
									"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
									"    pm.expect(jsonData.password).to.eql('abc123')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"username": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"username\":\"Alexander\",\r\n\t\"email\":\"asd@asd.com\",\r\n\t\"password\":\"abc123\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Posting a user."
					},
					"response": []
				},
				{
					"name": "get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75419583-cf8f-4823-833a-245fb6503350",
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrayLength = jsonData.length;",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"last entry in the array should be the posted user\", function() {",
									"    pm.expect(jsonData[arrayLength-1].username).to.eql(\"Alexander\");",
									"    pm.expect(jsonData[arrayLength-1].email).to.eql('asd@asd.com');    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Testing to get all users"
					},
					"response": []
				},
				{
					"name": "get specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebff8bc1-4791-44a6-a1d7-19a6ea4dd9a4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.username).to.eql('Alexander');",
									"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Testing to get specific user."
					},
					"response": []
				},
				{
					"name": "delete all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fea239b-c4cf-45a5-8906-305b3292468f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate deletion was successful\", function() {",
									"    pm.expect(jsonData.ok).to.eql(1);    ",
									"    pm.expect(jsonData.deletedCount).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "delete all users"
					},
					"response": []
				},
				{
					"name": "get all users 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2225f93c-dcfa-4efa-929f-5ea63e8e613e",
								"exec": [
									"var jsonData = pm.response.json();",
									"var arrayLength = jsonData.length;",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"there should be no users\", function() {",
									"    pm.expect(arrayLength).to.eql(0);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Testing to get all users"
					},
					"response": []
				},
				{
					"name": "delete all users 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed8b3a67-4d5d-4a2c-ab43-60a18c8aed81",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate deletion was successful\", function() {",
									"    pm.expect(jsonData.ok).to.eql(1);",
									"    pm.expect(jsonData.deletedCount).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "delete all users"
					},
					"response": []
				},
				{
					"name": "add user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62bf7b10-f97b-4753-830c-9c21a7ca3eed",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"userId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.username).to.eql('Alexander');",
									"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
									"    pm.expect(jsonData.password).to.eql('abc123')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"username\":\"Alexander\",\r\n\t\"email\":\"asd@asd.com\",\r\n\t\"password\":\"abc123\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Posting a user."
					},
					"response": []
				},
				{
					"name": "get specific user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e51ed96-37f5-4a9c-8064-26562f4392a9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.username).to.eql('Alexander');",
									"    pm.expect(jsonData.email).to.eql('asd@asd.com');",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Testing to get specific user."
					},
					"response": []
				},
				{
					"name": "patch user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22a0fd8c-f2b3-4907-b6dd-49ac19c04b8e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct user was updated\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Alexander2\",\n    \"email\": \"asd@asd.com\",\n    \"password\": \"abc123\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "patching user"
					},
					"response": []
				},
				{
					"name": "patch user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "632d8eb7-3ef5-42fe-9907-9ab42f98fbbd",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct user was updated\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Alexander3\",\n    \"email\": \"asd@asd.com\",\n    \"password\": \"abc123\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "patching user"
					},
					"response": []
				},
				{
					"name": "replace user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f713f809-f05c-4ae4-934a-704cec839cd5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct user was updated\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Alexander4\",\n    \"email\": \"abc@abc.com\",\n    \"password\": \"abc1234\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "putting user"
					},
					"response": []
				},
				{
					"name": "replace user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98c51129-9b51-4a7f-92d9-59a3bfdd1064",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct user was updated\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"Alexander5\",\n    \"email\": \"def@def.com\",\n    \"password\": \"abc12345\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "putting user"
					},
					"response": []
				},
				{
					"name": "add shoppinglist to user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e9f644c-0bfd-4186-ac85-146545d5ee61",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"shoppingListId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ingredients\": []\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/shoppinglists",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"shoppinglists"
							]
						},
						"description": "posting user shoppinglist"
					},
					"response": []
				},
				{
					"name": "get specific user shoppinglist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86a9f157-eedb-49f7-9667-105e45cda020",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user._id).to.eql(pm.environment.get('userId'));",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('shoppingListId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/shoppinglists/{{shoppingListId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"shoppinglists",
								"{{shoppingListId}}"
							]
						},
						"description": "getting specific user list"
					},
					"response": []
				},
				{
					"name": "delete specific shoppinglist from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21995780-900c-40ac-b6b4-03207ffdfa34",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct list was deleted\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('shoppingListId'));",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
									"});",
									"pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/shoppinglists/{{shoppingListId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"shoppinglists",
								"{{shoppingListId}}"
							]
						},
						"description": "Deleting shoppinglist from user"
					},
					"response": []
				},
				{
					"name": "get all shopping lists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cfbc6f4-85b0-44c2-a21a-4f20fedeaf47",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    pm.expect(jsonData.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/shoppinglists",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"shoppinglists"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb889ad2-dbd8-4175-a805-56c558db0272",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should indicate correct user was deleted\", function() {\r",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));\r",
									"});\r",
									"pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete specific user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8a8c239-fc56-4b39-a3c3-5658960f0c1a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"response is NOT FOUND\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user recipes",
			"item": [
				{
					"name": "create admin user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63bdceae-970a-47a9-a0d5-0f72ddf7c04a",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"userId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.username).to.eql('admin');",
									"    pm.expect(jsonData.email).to.eql('admin@yummy.io');",
									"    pm.expect(jsonData.password).to.eql('4dmin');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":\"admin\",\n\t\"email\":\"admin@yummy.io\",\n\t\"password\":\"4dmin\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "admin creates blueberry pie recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f06edb9b-24c1-46f1-a7d0-7c6eaec6da85",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"recipeId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Blueberry pie\",\n    \"category\": \"Baking\",\n    \"ingredients\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "return specific admin recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f14e351a-0b7a-4b45-8fb0-7418b5b75b2f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user._id).to.eql(pm.environment.get('userId'));",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('recipeId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes/{{recipeId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes",
								"{{recipeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin creates swedish meatball recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "934a44ae-e292-4139-b326-778a88a44d63",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"recipeId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Swedish meatballs\",\n    \"category\": \"Cooking\",\n    \"ingredients\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "return all admin's recipes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a731998-c1ee-4336-823d-4a24d7e6a609",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete all recipes",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin creates apple pie recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85813968-1f64-4aed-821b-e6c20f0db6be",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"recipeId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Apple pie\",\n    \"category\": \"Baking\",\n    \"ingredients\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "update specific admin recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d2e3372-0251-4db9-8523-8b05aa1a1efe",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct recipe was updated\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('recipeId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"allergies\": [\"Nuts\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes/{{recipeId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes",
								"{{recipeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete specific admin recipe",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes/{{recipeId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes",
								"{{recipeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin creates lasagna recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8df1a491-e537-4f1e-b68b-c9cd091cd8fa",
								"exec": [
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"recipeId\", jsonData._id);",
									"",
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get('userId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lasagna\",\n    \"category\": \"Cooking\",\n    \"ingredients\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete admin user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a70e885c-caff-4678-9c00-3570b4a1e8a9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate correct user was deleted\", function() {",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('userId'));",
									"});",
									"pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "75d2109e-bafa-47b6-8868-12ca2fd88467",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f5150ae3-e38f-408e-9259-5bcf96be2993",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "public recipes",
			"item": [
				{
					"name": "return all recipes in database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87b44fb5-3c46-4492-af58-0d5eacf16c60",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.length).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete all recipes in database",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"recipes"
							]
						}
					},
					"response": []
				},
				{
					"name": "check if any recipes left in database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c16d0cbc-f60a-4a40-a37c-72b209a2780f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    pm.expect(jsonData.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/recipes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"recipes"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ingredients",
			"item": [
				{
					"name": "POST user for ingredient testing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f1a6978-d391-401c-ae38-e62991ad0dd1",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userId\", jsonData._id);",
									"console.log(pm.environment.get(\"userId\"));",
									"",
									"",
									"pm.test(\"Response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response contains correct JSON data\", function() {",
									"    pm.expect(jsonData.username).to.eql('Chef Ramsay');",
									"    pm.expect(jsonData.email).to.eql('angry@always.com');",
									"    pm.expect(jsonData.password).to.eql('RAGE');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"username": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"username\":\"Chef Ramsay\",\r\n\t\"email\":\"angry@always.com\",\r\n\t\"password\":\"RAGE\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Posting a user."
					},
					"response": []
				},
				{
					"name": "POST ingredient 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1e2de35-4972-4b93-8a96-7ca0f1c033bb",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"ingredientId\", jsonData._id);\r",
									"\r",
									"pm.test(\"Response is CREATED\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct JSON data\", function() {\r",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get(\"userId\"));\r",
									"    pm.expect(jsonData.name).to.eql('Tomatoes');\r",
									"    pm.expect(jsonData.foodType).to.eql('Vegetable');\r",
									"    pm.expect(jsonData.description).to.eql('The tomato is the edible, often red berry of the plant Solanum lycopersicum.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"{{userId}}\",\r\n    \"name\": \"Tomatoes\",\r\n    \"foodType\": \"Vegetable\",\r\n    \"description\": \"The tomato is the edible, often red berry of the plant Solanum lycopersicum.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all ingredients",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ea2f3d7-e9e9-4b8e-b7d9-b7a7e2b2e3a1",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var arrayLength = jsonData.length;\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Last entry in the array should be the posted ingredient\", function() {\r",
									"    pm.expect(jsonData[arrayLength-1].name).to.eql(\"Tomatoes\");    \r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET specific ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f46946fb-848b-4a8a-a197-69fc76f0a70f",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct JSON data\", function() {\r",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get(\"userId\"));\r",
									"    pm.expect(jsonData.name).to.eql('Tomatoes');\r",
									"    pm.expect(jsonData.foodType).to.eql('Vegetable');\r",
									"    pm.expect(jsonData.description).to.eql('The tomato is the edible, often red berry of the plant Solanum lycopersicum.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/ingredients/{{ingredientId}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								"{{ingredientId}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all user ingredients",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7470377b-c312-4d28-b42e-7357a95ea5de",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var arrayLength = jsonData.length;\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Last entry in the array should be the users posted ingredient\", function() {\r",
									"    pm.expect(jsonData[arrayLength-1].name).to.eql(\"Tomatoes\");    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/ingredients/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"ingredients",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one user ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7f236f0-ceb6-4b84-a9c7-26f65cfe990b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct JSON data\", function() {\r",
									"    pm.expect(jsonData.user).to.eql(pm.environment.get(\"userId\"));\r",
									"    pm.expect(jsonData.name).to.eql('Tomatoes');\r",
									"    pm.expect(jsonData.foodType).to.eql('Vegetable');\r",
									"    pm.expect(jsonData.description).to.eql('The tomato is the edible, often red berry of the plant Solanum lycopersicum.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/ingredients/{{ingredientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"ingredients",
								"{{ingredientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH one user ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1eb75d34-84b4-4f94-b1b3-5c4760d7d6df",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should indicate correct ingredient was updated\", function() {\r",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('ingredientId'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"foodType\": \"Tomatoes are actually fruit\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/ingredients/{{ingredientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"ingredients",
								"{{ingredientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT one user ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88b3d026-0473-41fe-820d-eb59bfea47f9",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should indicate correct ingredient was replaced\", function() {\r",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('ingredientId'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"{{userId}}\",\r\n    \"name\": \"Green Tomatoes\",\r\n    \"foodType\": \"Vegetable\",\r\n    \"description\": \"You are both wrong, tomatoes are green vegetables.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/ingredients/{{ingredientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"ingredients",
								"{{ingredientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE specific user ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8f0018a-5b17-4f7c-8745-07e06ae0a1ef",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should indicate correct list was deleted\", function() {\r",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get('ingredientId'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{userId}}/ingredients/{{ingredientId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"ingredients",
								"{{ingredientId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE all ingredients",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08da2b0b-0dd5-4a68-ae02-86bf5f7c2e69",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response is OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should indicate deletion was successful\", function() {\r",
									"    pm.expect(jsonData.ok).to.eql(1);    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07c7f035-2896-44a3-be51-2485f82f4a1f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"response is OK\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should indicate deletion was successful\", function() {",
									"    pm.expect(jsonData.ok).to.eql(1);    ",
									"    pm.expect(jsonData.deletedCount).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "delete all users"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a199de00-f05e-4572-97cd-b69080a8155d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2a19431a-778e-4ff4-a3d7-a7124b375796",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd185905-a834-4211-8030-583d17702534",
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}